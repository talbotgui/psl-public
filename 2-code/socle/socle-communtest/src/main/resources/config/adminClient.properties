#########################################################################
# Configuration pour que l'application se declare auprès de l'AdminServer
#########################################################################

# URL, login et mdp de l'application d'administration
# (username et mot de passe non chiffres pour l'env de dev)
spring.boot.admin.client.url=https://admin.dev-psl.guillaumetalbot.com:9090/service/adminpsl
spring.boot.admin.client.username=${PSL_ENV_04}
spring.boot.admin.client.password=${PSL_ENV_05}

# Ouverture des APIs exposant l'etat du processus (Actuator)
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Pour demander a un micro-service de se desinscrire de la gateway sur une simple commande POST (avant de tuer le processus)
management.endpoint.shutdown.enabled=true

# Paramètres fournissant a l'admin les elements constitutifs de l'URL pour appeler les APIs Actuator de l'application
#spring.boot.admin.client.instance.service-base-url=https://localhost:${server.port} /!\ ne fonctionne pas avec les ports dynamiques (server.port=0). Il faut laisser vide mais renseigner server.address

# Login et mdp necessaires pour que l'admin appelle les APIs Actuator de l'application
spring.boot.admin.client.instance.metadata.user.name=${PSL_ENV_06}
spring.boot.admin.client.instance.metadata.user.password=${PSL_ENV_07}

# Pour forcer le micro-service a se desinscrire du service Admin (dans le cas d'un arret SOFT)
spring.boot.admin.client.auto-deregistration=true