# Configuration générale des logs basées sur la configuration par défaut de LogBack dans SpringBoot
###################################################################################################

# Définition du chemin du PID
spring.pid.file=${repertoirePidEtLog}pid_${spring.application.name}-${indexInstance:1}.pid
spring.pid.fail-on-write-error=true

# Logger pour avoir les logs dans la console Eclipse (la valeur vide permet de désactiver les logs dans la sortie standard alias la console)
#logging.pattern.console=[%d{dd/MM/yyyy:HH:mm:ss:SSS Z}] %-5(${PID:-}) [%-16(%X{traceId:-}),%-16(%X{spanId:-})] %-5level %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}
logging.pattern.console=

# Pattern de log personnalisé pour ressembler à celui des "accessLogs" (/!\ %X{} est sensible aux majuscules et parentSpandId n'est pas disponible)
logging.pattern.file=[%d{dd/MM/yyyy:HH:mm:ss:SSS Z}] %-5(${PID:-}) [%-16(%X{traceId:-}),%-16(%X{spanId:-})] %-5level %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}

# Pour avoir un fichier de log précis (cf. conf équivalente et commentée dans les logback*.xml)
logging.file.name=${repertoirePidEtLog:../.log/}log_${spring.application.name}-${indexInstance:1}.log
logging.logback.rollingpolicy.file-name-pattern=${repertoirePidEtLog:../.log/}.archive/log_${spring.application.name}-${indexInstance:1}-%d{yyyy-MM-dd}.%i.log.gz
logging.logback.rollingpolicy.max-file-size=1MB
logging.logback.rollingpolicy.max-history=15
logging.logback.rollingpolicy.total-size-cap=20MB

# Toutes les informations sont logguées sauf TRACE car des les données envoyées aux APIs et retournées par les APIs sont affichées 
logging.level.com.github.talbotgui.psl.socle=TRACE

# Logs utiles durant toute la vie des micro-services pour suivre les interconnexions entre eux et les services
#logging.level.org.springframework.cloud.config.client.ConfigServerInstanceMonitor=DEBUG

# Logs utiles durant les tests de sécurisation des APIs ADMIN par certificat client
# ajouter "-Djavax.net.debug=all" dans le script/launch démarrant le micro-service

# Logs utiles durant les tests d'inscription/désinscription d'un micro-service au service d'administration
#logging.level.de.codecentric.boot=DEBUG

# Logs utiles au démarrage des micro-services pour suivre le chargement des configurations
logging.level.org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration=INFO

# Ces loggueurs sont inutiles
logging.level.org.springframework.security.web.DefaultSecurityFilterChain=WARN
logging.level.org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver=WARN
logging.level.org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver=ERROR
logging.level.springfox=WARN

# Ces loggueurs déclenchés durant les tests sont inutiles en mode PRODUCTION
logging.level.org.springframework.boot.test.context.SpringBootTestContextBootstrapper=WARN
logging.level.org.springframework.test.context.support.AbstractContextLoader=WARN
logging.level.org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongo=WARN
logging.level.org.mongodb.driver=WARN

# Logs en INFO par défaut
logging.level.root=INFO

