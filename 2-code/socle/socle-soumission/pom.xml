<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Déclaration de l'artefact parent -->
	<parent>
		<groupId>com.github.talbotgui.psl.socle</groupId>
		<artifactId>socle</artifactId>
		<version>0.0.2-SNAPSHOT</version>
	</parent>

	<artifactId>socle-soumission</artifactId>
	<name>socle-soumission</name>
	<description>API de soumission PSL</description>

	<!-- Modification de la clef pour les besoins des sous-projets -->
	<properties><cheminRelatifVersLaRacineDuDepot>${project.basedir}/../../..</cheminRelatifVersLaRacineDuDepot></properties>
	
	<dependencies>
	
		<!-- Le projet commun -->
		<dependency>
			<groupId>com.github.talbotgui.psl.socle</groupId>
			<artifactId>socle-commun</artifactId>
			<version>${project.version}</version>
		</dependency>
		
		<!-- Dans les tests, sont nécessaires les classes permettant de manipuler MongoDB -->
		<dependency>
			<groupId>com.github.talbotgui.psl.socle</groupId>
			<artifactId>socle-commundbtest</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.talbotgui.psl.socle</groupId>
			<artifactId>socle-commundb</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
			<exclusions>
				<!-- Pour ne pas avoir MongoDB qui démarre --> 
				<exclusion>
					<groupId>de.flapdoodle.embed</groupId>
					<artifactId>de.flapdoodle.embed.mongo.spring3x</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- Le classifier CLIENT du projet dbdocument pour la compilation/exécution normale -->
		<!-- Aucune dépendance transitive souhaitées car, de base, socle-commun fournit tout ce qu'il faut pour faire un appel d'API HTTP -->
		<dependency>
			<groupId>com.github.talbotgui.psl.socle</groupId>
			<artifactId>socle-dbdocument</artifactId>
			<version>${project.version}</version>
			<classifier>client</classifier>
			<!-- Pas de dépendances spécifiques de ce client nécessaire dans le projet -->
			<exclusions><exclusion><groupId>*</groupId><artifactId>*</artifactId></exclusion></exclusions>
		</dependency>
		
		<!-- Le classifier CLIENT du projet dbconfiguration pour la compilation/exécution normale -->
		<!-- Aucune dépendance transitive souhaitées car, de base, socle-commun fournit tout ce qu'il faut pour faire un appel d'API HTTP -->
		<dependency>
			<groupId>com.github.talbotgui.psl.socle</groupId>
			<artifactId>socle-dbconfiguration</artifactId>
			<version>${project.version}</version>
			<classifier>client</classifier>
			<!-- Pas de dépendances spécifiques de ce client nécessaire dans le projet -->
			<exclusions><exclusion><groupId>*</groupId><artifactId>*</artifactId></exclusion></exclusions>
		</dependency>
		
		<!-- Le classifier CLIENT du projet dbbrouillon pour la compilation/exécution normale -->
		<!-- Aucune dépendance transitive souhaitées car, de base, socle-commun fournit tout ce qu'il faut pour faire un appel d'API HTTP -->
		<dependency>
			<groupId>com.github.talbotgui.psl.socle</groupId>
			<artifactId>socle-dbbrouillon</artifactId>
			<version>${project.version}</version>
			<classifier>client</classifier>
			<exclusions><exclusion><groupId>*</groupId><artifactId>*</artifactId></exclusion></exclusions>
		</dependency>
		
		<!-- Le classifier CLIENT du projet dbnotification pour la compilation/exécution normale -->
		<!-- Aucune dépendance transitive souhaitées car, de base, socle-commun fournit tout ce qu'il faut pour faire un appel d'API HTTP -->
		<dependency>
			<groupId>com.github.talbotgui.psl.socle</groupId>
			<artifactId>socle-dbnotification</artifactId>
			<version>${project.version}</version>
			<classifier>client</classifier>
			<exclusions><exclusion><groupId>*</groupId><artifactId>*</artifactId></exclusion></exclusions>
		</dependency>
		
		<!-- Pour faire fonctionner les tests dans Eclipse qui gère mal le classifier "client" (cf. §3.35.1 de la documentation) -->
		<!-- Aucune dépendance transitive souhaitées car, de base, socle-commun fournit tout ce qu'il faut pour faire un appel d'API HTTP -->
		<dependency>
			<groupId>com.github.talbotgui.psl.socle</groupId>
			<artifactId>socle-dbdocument</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
			<exclusions><exclusion><groupId>*</groupId><artifactId>*</artifactId></exclusion></exclusions>
		</dependency>
		<dependency>
			<groupId>com.github.talbotgui.psl.socle</groupId>
			<artifactId>socle-dbconfiguration</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
			<exclusions><exclusion><groupId>*</groupId><artifactId>*</artifactId></exclusion></exclusions>
		</dependency>
		<dependency>
			<groupId>com.github.talbotgui.psl.socle</groupId>
			<artifactId>socle-dbbrouillon</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
			<exclusions><exclusion><groupId>*</groupId><artifactId>*</artifactId></exclusion></exclusions>
		</dependency>
		<dependency>
			<groupId>com.github.talbotgui.psl.socle</groupId>
			<artifactId>socle-dbnotification</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
			<exclusions><exclusion><groupId>*</groupId><artifactId>*</artifactId></exclusion></exclusions>
		</dependency>
		
		<!-- Pour disposer d'un moteur JS -->
		<dependency>
			<groupId>org.graalvm.polyglot</groupId>
			<artifactId>polyglot</artifactId>
        </dependency>
        <dependency>
			<groupId>org.graalvm.js</groupId>
			<artifactId>js-scriptengine</artifactId>
        </dependency>
        <dependency>
			<groupId>org.graalvm.polyglot</groupId>
			<artifactId>js-community</artifactId>
			<type>pom</type>
			<scope>runtime</scope>
        </dependency>

		<!-- Pour générer des documents à partir de template textuel -->
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity-engine-core</artifactId>
		</dependency>
		
		<!-- Pour manipuler un template PDF existant -->
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>pdfbox</artifactId>
			<exclusions>
				<!-- pour éviter le warning de Spring "Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts" -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- Pour transformer du HTML en PDF -->
		<dependency>
			<groupId>org.xhtmlrenderer</groupId>
			<artifactId>flying-saucer-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.xhtmlrenderer</groupId>
			<artifactId>flying-saucer-pdf</artifactId>
		</dependency>

		<!-- Outils de développement (redémarrage à la modification par exemple) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- Outils de tests (avec JUnit5 et non le 4 apporté par Spring) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Pour stocker les documents dans MongoDB depuis SoumissionReelleServiceTest -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-mongodb</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongodb-driver-sync</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Pour obfusquer le code (impossible à placer dans le projet parent) -->
			<plugin>
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
			</plugin>
			
			<!-- Packaging en JAR exécutable Spring -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<!-- Pour copier le fichier target/classes/git.properties du projet SOCLE contenant les informations du dernier commit (infos exposées ensuite dans /info d'Actuator) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-the-git-infos</id>
						<configuration>
							<resources>
								<resource><directory>${project.basedir}/../target/classes</directory></resource>
							</resources>    
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- Création du JAR client en plus du JAR classique -->
 			<plugin>
 				<artifactId>maven-jar-plugin</artifactId>
 				<executions>
 					<execution>
 						<id>jarClient</id>
 						<phase>package</phase>
 						<goals><goal>jar</goal></goals>
 						<configuration>
 							<classifier>client</classifier>
 							<includes>
 								<include>**/apiclient/**</include>
 							</includes>
 						</configuration>
 					</execution>
 				</executions>
 			</plugin> 
		</plugins>
	</build>

</project>
